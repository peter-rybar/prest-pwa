{"version":3,"file":null,"sources":["../src/main/prest/jsonml/jsonml.ts","../src/main/prest/jsonml/jsonml-idom.ts","../src/main/sw-lib.ts","../src/main/prest/jsonml/jsonml-widget.ts","../src/main/prest/signal.ts","../src/main/index.ts"],"sourcesContent":["\nexport interface Attrs {\n    _id?: string;\n    _classes?: string[];\n    _ref?: string;\n    _key?: string;\n    _skip?: boolean;\n    data?: {[key: string]: any};\n    styles?: {[key: string]: string};\n    classes?: string[];\n    [key: string]: any;\n}\n\nexport type JsonMLFnc = (e?: HTMLElement) => void;\n\nexport interface JsonMLObj {\n    toJsonML?(): JsonML;\n}\n\nexport interface JsonML extends Array<string | Attrs | JsonML | JsonMLFnc | JsonMLObj> {\n    // 0: string;\n    // 1?: Attrs | JsonML | JsonMLFnc | JsonMObj;\n}\n\nexport interface JsonMLs extends Array<JsonML | string | JsonMLObj> {\n}\n\n\nexport interface JsonMLHandler {\n    open(tag: string, attrs: Attrs, children: number, ctx?: any): boolean;\n    close(tag: string, children: number, ctx?: any): void;\n    text(text: string, ctx?: any): void;\n    fnc(fnc: JsonMLFnc, ctx?: any): void;\n    obj(obj: JsonMLObj, ctx?: any): void;\n}\n\nexport function jsonml(jsonML: JsonML, handler: JsonMLHandler, ctx?: any): void {\n    if (!jsonML) {\n        return;\n    }\n\n    const head = jsonML[0] as string;\n    const attrsObj = jsonML[1] as any;\n    const hasAttrs = attrsObj && attrsObj.constructor === Object;\n    const childIdx = hasAttrs ? 2 : 1;\n\n    let children = 0;\n    for (let i = childIdx; i < jsonML.length; i++) {\n        if (jsonML[i] && jsonML[i].constructor !== Function) {\n            children++;\n        }\n    }\n\n    const refSplit = head.split(\"~\");\n    const ref = refSplit[1];\n    const dotSplit = refSplit[0].split(\".\");\n    const hashSplit = dotSplit[0].split(\"#\");\n    const tag = hashSplit[0] || \"div\";\n    const id = hashSplit[1];\n    const classes = dotSplit.slice(1);\n\n    let attrs: Attrs;\n    if (hasAttrs) {\n        attrs = attrsObj as Attrs;\n    } else {\n        attrs = {};\n    }\n\n    if (id) {\n        attrs._id = id;\n    }\n    if (classes.length) {\n        attrs._classes = classes;\n    }\n    if (ref) {\n        attrs._ref = ref;\n    }\n\n    const skip = handler.open(tag, attrs, children, ctx);\n\n    if (!skip) {\n        for (let i = childIdx, l = jsonML.length; i < l; i++) {\n            const jml = jsonML[i] as any;\n            if (jml === undefined) {\n                continue;\n            }\n            switch (jml.constructor) {\n                case Array:\n                    jsonml(jml, handler, ctx);\n                    break;\n                case Function:\n                    handler.fnc(jml, ctx);\n                    break;\n                case String:\n                    handler.text(jml, ctx);\n                    break;\n                default:\n                    handler.obj(jml, ctx);\n            }\n        }\n    }\n\n    handler.close(tag, children, ctx);\n}\n","\nimport {\n    JsonML,\n    JsonMLs,\n    JsonMLObj,\n    JsonMLFnc,\n    Attrs,\n    JsonMLHandler,\n    jsonml\n} from \"./jsonml\";\n\n\ndeclare var IncrementalDOM: any;\n\n\nclass JsonmlIDomHandler implements JsonMLHandler {\n\n    open(tag: string, attrs: Attrs, children: number, ctx?: any): boolean {\n        const props: any = [];\n        let id: string = attrs._id;\n        let classes: string[] = attrs._classes ? attrs._classes : [];\n        let ref: string = attrs._ref;\n        for (const a in attrs) {\n            if (attrs.hasOwnProperty(a)) {\n                switch (a) {\n                    case \"_id\":\n                    case \"_classes\":\n                    case \"_ref\":\n                    case \"_key\":\n                    case \"_skip\":\n                        break;\n                    case \"id\":\n                        id = attrs[a];\n                        break;\n                    case \"classes\":\n                        classes = classes.concat(attrs[a]);\n                        break;\n                    case \"class\":\n                        classes = classes.concat(attrs[a].split(\" \"));\n                        break;\n                    case \"data\":\n                        for (const d in attrs[a]) {\n                            if (attrs[a].hasOwnProperty(d)) {\n                                if (attrs[a][d].constructor === String) {\n                                    props.push(\"data-\" + d, attrs[a][d]);\n                                } else {\n                                    props.push(\"data-\" + d, JSON.stringify(attrs[a][d]));\n                                }\n                            }\n                        }\n                        break;\n                    case \"styles\":\n                        props.push(\"style\", attrs[a]);\n                        break;\n                    default:\n                        if (typeof attrs[a] === \"function\") {\n                            props.push(\"on\" + a, attrs[a]);\n                        } else {\n                            props.push(a, attrs[a]);\n                        }\n                }\n            }\n        }\n        if (classes.length) {\n            props.unshift(\"class\", classes.join(\" \"));\n        }\n        if (id) {\n            props.unshift(\"id\", id);\n        }\n        IncrementalDOM.elementOpen(tag, attrs._key || null, null, ...props);\n        if (attrs._skip) {\n            IncrementalDOM.skip();\n        }\n        if (ctx && ref) {\n            ctx.refs[ref] = IncrementalDOM.currentElement();\n        }\n        return attrs._skip ? true : false;\n    }\n\n    close(tag: string, children: number, ctx?: any): void {\n        IncrementalDOM.elementClose(tag);\n    }\n\n    text(text: string, ctx?: any): void {\n        IncrementalDOM.text(text);\n    }\n\n    fnc(fnc: JsonMLFnc, ctx?: any): void {\n        fnc(IncrementalDOM.currentElement());\n    }\n\n    obj(obj: JsonMLObj, ctx?: any): void {\n        if (\"toJsonML\" in obj) {\n            jsonml(obj.toJsonML(), this, obj);\n        } else {\n            this.text(\"\" + obj, ctx);\n        }\n    }\n\n}\n\nfunction jsonml2idom(jsonML: JsonML, ctx?: any): void {\n    jsonml(jsonML, new JsonmlIDomHandler(), ctx);\n}\n\n\nfunction jsonmls2idom(jsonMLs: JsonMLs, ctx?: any): void {\n    for (const jsonML of jsonMLs) {\n        if (jsonML.constructor === String) {\n            IncrementalDOM.text(jsonML);\n        } else if (\"toJsonML\" in (jsonML as any)) {\n            const obj = jsonML as JsonMLObj;\n            jsonml2idom(obj.toJsonML(), obj);\n        } else {\n            jsonml2idom(jsonML as JsonML, ctx);\n        }\n    }\n}\n\n\nexport function jsonml2idomPatch(node: Node, jsonML: JsonML, ctx?: any): void {\n    IncrementalDOM.patch(node,\n        (data: JsonML) => jsonml2idom(data, ctx), jsonML);\n}\n\nexport function jsonmls2idomPatch(node: Node, jsonMLs: JsonMLs, ctx?: any): void {\n    IncrementalDOM.patch(node,\n        (data: JsonMLs) => jsonmls2idom(data, ctx), jsonMLs);\n}\n","// Register Service Worker.\nexport function swInit(): void {\n    if (\"serviceWorker\" in navigator) {\n        // Path is relative to the origin, not project root.\n        navigator.serviceWorker.register(\"./sw.js\")\n            .then((registration) => {\n                // console.log(reg);\n                if (registration.installing) {\n                    console.log(\"Service worker installing\");\n                } else if (registration.waiting) {\n                    console.log(\"Service worker installed\");\n                } else if (registration.active) {\n                    console.log(\"Service worker active\");\n                }\n                console.log(\"Registration succeeded. Scope is \" + registration.scope);\n            })\n            .catch((error) => {\n                console.error(\"Registration failed with \" + error);\n            });\n    }\n}\n\nexport function showNotification(title: string, options?: NotificationOptions): void {\n    if ((self as any).Notification) {\n        console.log(\"Notification supported\");\n        Notification.requestPermission((result) => {\n            if (result === \"granted\") {\n                console.log(\"Notification permission granted\");\n                navigator.serviceWorker.ready.then((registration) => {\n                    console.log(\"Notification SW ready\");\n                    registration.showNotification(title, options);\n                });\n            } else {\n                console.warn(\"Notification permission:\", result);\n            }\n        });\n    } else {\n        console.warn(\"Notification not supported\");\n    }\n}\n","// declare const process: any;\n// const __NODE = Boolean(\n//     typeof process === \"object\" &&\n//     process.versions &&\n//     process.versions.node);\n\n// if (__NODE) {\n//     console.log(\"I'm running in Node.JS\");\n// } else {\n//     console.log(\"I'm running in browser\");\n// }\n\nimport { JsonML, JsonMLs, JsonMLObj } from \"./jsonml\";\nimport { jsonmls2idomPatch } from \"./jsonml-idom\";\n\n\nexport interface DomWidget {\n    mount(e: HTMLElement): this;\n    umount(): this;\n    onMount?(): void;\n    onUmount?(): void;\n}\n\nexport abstract class Widget implements JsonMLObj, DomWidget {\n\n    private static __count = 0;\n\n    readonly type: string = \"Widget\"; // this.constructor.name;\n    readonly id: string = this.type + \"-\" + Widget.__count++;\n    readonly dom: HTMLElement;\n    readonly refs: { [key: string]: HTMLElement } = {};\n\n    private _updateSched: number;\n\n    constructor(type: string = \"\") {\n        if (type) {\n            this.type = type;\n        }\n    }\n\n    abstract render(): JsonMLs;\n\n    mount(e: HTMLElement = document.body): this {\n        if (!this.dom) {\n            (this as any).dom = e;\n            const jsonMLs = (this as any).render();\n            jsonmls2idomPatch(e, jsonMLs, this);\n            e.setAttribute(\"widget\", this.type);\n            if ((this as any).onMount) {\n                (this as any).onMount();\n            }\n            // onDetach(e, () => {\n            //     (this as any).dom = undefined;\n            //     if ((this as any).onUmount) {\n            //         (this as any).onUmount();\n            //     }\n            // });\n        }\n        return this;\n    }\n\n    umount(): this {\n        if (this.dom) {\n            if ((this as any).onUmount) {\n                (this as any).onUmount();\n            }\n            if (this.dom.hasAttribute(\"widget\")) {\n                this.dom.removeAttribute(\"widget\");\n            }\n            this.dom.parentElement.removeChild(this.dom);\n            (this as any).dom = undefined;\n        }\n        return this;\n    }\n\n    update(): this {\n        if (this.dom && !this._updateSched) {\n            this._updateSched = setTimeout(() => {\n                if (this.dom) {\n                    jsonmls2idomPatch(this.dom, this.render(), this);\n                }\n                this._updateSched = null;\n            }, 0);\n        }\n        return this;\n    }\n\n    toJsonML(): JsonML {\n        if (this.dom) {\n            if (this._updateSched) {\n                clearTimeout(this._updateSched);\n                this._updateSched = null;\n            } else {\n                return [\n                    \"div\", {\n                        _skip: true,\n                        _id: this.id,\n                        _key: this.id,\n                        widget: this.type\n                    }\n                ];\n            }\n        }\n        const jsonMLs = (this as any).render();\n        return [\n            \"div\", {\n                _id: this.id,\n                _key: this.id,\n                widget: this.type\n            },\n            ...jsonMLs,\n            (e: HTMLElement) => {\n                if (!this.dom) {\n                    (this as any).dom = e;\n                    if ((this as any).onMount) {\n                        (this as any).onMount();\n                    }\n                    // onDetach(e, () => {\n                    //     (this as any).dom = undefined;\n                    //     if ((this as any).onUmount) {\n                    //         (this as any).onUmount();\n                    //     }\n                    // });\n                }\n            }\n        ];\n    }\n\n}\n\n// function onDetach(e: HTMLElement, callback: () => void) {\n//     new MutationObserver(mutations => {\n//         mutations.forEach(mutation => {\n//             const removed = mutation.removedNodes as any;\n//             for (const r of removed) {\n//                 console.log(r, r === e);\n//                 if (r === e) {\n//                     callback();\n//                 }\n//             }\n//         });\n//     }).observe(e.parentElement, { childList: true });\n//     // }).observe(e.parentElement, { childList: true, subtree: true });\n// }\n\n\n// const observer = new MutationObserver(mutations => {\n//     mutations.forEach(mutation => {\n//         // console.log(mutation.type);\n//         // console.log(mutation.target);\n//         // console.log(\"add\", mutation.addedNodes);\n//         // console.log(\"rm\", mutation.removedNodes);\n//         const added = mutation.addedNodes as any;\n//         for (const a of added) {\n//             console.log(\"added\", a);\n//         }\n//         const removed = mutation.removedNodes as any;\n//         for (const r of removed) {\n//             console.log(\"removed\", r);\n//         }\n//     });\n// });\n// const config = {\n//     childList: true,\n//     // attributes: true,\n//     // characterData: true,\n//     // subtree: true,\n//     // attributeOldValue: true,\n//     // characterDataOldValue: true,\n//     attributeFilter: [] as string[]\n// };\n// observer.observe(document.getElementById(\"app\"), config);\n// // observer.disconnect();\n\n\n// IncrementalDOM.notifications.nodesCreated = (nodes: Node[]) => {\n//     nodes.forEach(node => {\n//         // node may be an Element or a Text\n//         console.log(\"IncrementalDOM.notifications.nodesCreated\", node);\n//     });\n// };\n// IncrementalDOM.notifications.nodesDeleted = (nodes: Node[]) => {\n//     nodes.forEach(node => {\n//         // node may be an Element or a Text\n//         console.log(\"IncrementalDOM.notifications.nodesDeleted\", node);\n//     });\n// };\n","/**\n * Signal-Slot pattern module\n */\n\nexport type SlotCallback<T> = (data?: T) => void;\n\ninterface Slot<T> {\n    callback: SlotCallback<T>;\n    object?: any;\n}\n\nexport interface Sig<T> {\n    onConnect(onConnect: (connNo: number) => void): void;\n    onDisconnect(onDisconnect: (connNo: number) => void): void;\n    connNo(): number;\n    connect(callback: SlotCallback<T>, object?: any): void;\n    disconnect(callback: SlotCallback<T>, object?: any): void;\n    disconnectAll(): void;\n    freeze(): void;\n    unfreeze(): void;\n}\n\n/**\n * Signal slot pattern class with optional accumulator object.\n *\n * <T> signal data type\n */\nexport class Signal<T> implements Sig<T> {\n\n    private _slots: Slot<T>[] = [];\n    private _emit: boolean = true;\n\n    private _onConnect: (connNo: number) => void;\n    private _onDisconnect: (connNo: number) => void;\n\n    constructor() {\n    }\n\n    onConnect(onConnect: (connNo: number) => void): void {\n        this._onConnect = onConnect;\n    }\n\n    onDisconnect(onDisconnect: (connNo: number) => void): void {\n        this._onDisconnect = onDisconnect;\n    }\n\n    connNo(): number {\n        return this._slots.length;\n    }\n\n    // ES5\n    // set slot(slot:(data?:T) => void) {\n    //     this.connect(slot);\n    // }\n\n    /**\n     * Connects slot\n     */\n    connect(callback: (data?: T) => void): void;\n    connect(callback: (data?: T) => void, object?: Object): void;\n    connect(callback: (data?: any) => void, object?: Object): void {\n        if (typeof callback !== \"function\") return;\n        if (object) {\n            this._slots.push({ callback: callback, object: object });\n        } else {\n            this._slots.push({ callback: callback });\n        }\n        if (this._onConnect) {\n            this._onConnect(this._slots.length);\n        }\n    }\n\n    /**\n     * Disconnects slot\n     */\n    disconnect(callback: (data?: T) => void, object?: Object): void {\n        if (typeof callback !== \"function\") return;\n        this._slots = this._slots.filter(slot => {\n            return (object === undefined) ?\n                (slot.callback !== callback) :\n            (slot.callback !== callback) && (slot.object !== object);\n        });\n        if (this._onDisconnect) {\n            this._onDisconnect(this._slots.length);\n        }\n    }\n\n    /**\n     * Disconnects all slots\n     */\n    disconnectAll(): void {\n        this._slots = [];\n        if (this._onDisconnect) {\n            this._onDisconnect(this._slots.length);\n        }\n    }\n\n    /**\n     * Freeze signal propagation\n     */\n    freeze(): void {\n        this._emit = false;\n    }\n\n    /**\n     * Unfreeze signal propagation\n     */\n    unfreeze(): void {\n        this._emit = true;\n    }\n\n    /**\n     * Emits signal, you can start it in the way:\n     * signal.emit({any number of parameters}),\n     * emit returns accumulator.value().\n     */\n    emit(): any[];\n    emit(data?: T): any[];\n    emit(data?: any): any[] {\n        if (this._emit && this._slots.length) {\n            return this._slots.map(slot => {\n                const object: Object = slot.object;\n                if (object) {\n                    return slot.callback.call(object, data);\n                } else {\n                    return slot.callback(data);\n                }\n            });\n        }\n        return [];\n    }\n\n    /*\n    emitAsync(): void;\n    emitAsync(data?: T): void;\n    emitAsync(data?: any): void {\n        if (this._emit && this._slots.length) {\n            this._slots.forEach(slot => {\n                const object: Object = slot.object;\n                if (object) {\n                    setTimeout(() => {\n                        slot.callback.call(object, data);\n                    });\n                } else {\n                    setTimeout(() => {\n                        slot.callback(data);\n                    });\n                }\n            });\n        }\n    }\n    */\n\n}\n","\nimport { JsonMLs } from \"./prest/jsonml/jsonml\";\nimport { Widget } from \"./prest/jsonml/jsonml-widget\";\nimport { Signal } from \"./prest/signal\";\nimport { swInit, showNotification } from \"./sw-lib\";\n\ndeclare const mdc: any;\n\nclass HelloWidget extends Widget {\n\n    private _name: string;\n\n    constructor(name: string) {\n        super(\"HelloWidget\");\n        this._name = name;\n    }\n\n    setName(name: string): this {\n        this._name = name;\n        this.update();\n        return this;\n    }\n\n    onMount() {\n        console.log(\"onMount\", this.type, this.id);\n        mdc.textField.MDCTextField.attachTo(this.refs[\"f\"]);\n    }\n\n    onUmount() {\n        console.log(\"onUmount\", this.type, this.id);\n    }\n\n    render(): JsonMLs {\n        return [\n            [\"h2.mdc-typography--title\", this.type],\n            [\"label.mdc-text-field~f\",\n                [\"input.mdc-text-field__input~i\",\n                    {\n                        id: `${this.id}-i`,\n                        type: \"text\",\n                        value: this._name,\n                        input: this._onTextInput\n                    }\n                ],\n                [\"span.mdc-text-field__label\", \"Name\"],\n                [\"div.mdc-text-field__bottom-line\"]\n            ],\n            [\"p.mdc-typography--headline\",\n                \"Hello \",\n                [\"strong\", this._name],\n                \" !\"\n            ]\n        ];\n    }\n\n    private _onTextInput = (e: Event) => {\n        const i = e.target as HTMLInputElement;\n        // const i = this.refs[\"i\"] as HTMLInputElement;\n        this._name = i.value;\n        this.update();\n    }\n\n}\n\n\nclass TimerWidget extends Widget {\n\n    private _interval: number;\n\n    constructor() {\n        super(\"TimerWidget\");\n    }\n\n    toggle(on?: boolean): void {\n        switch (on) {\n            case true:\n                if (!this._interval) {\n                    this._interval = setInterval(() => this.update(), 1000);\n                }\n                break;\n            case false:\n                if (this._interval) {\n                    clearInterval(this._interval);\n                    this._interval = undefined;\n                }\n                break;\n            default:\n                this.toggle(!this._interval);\n        }\n        this.update();\n    }\n\n    onMount() {\n        console.log(\"onMount\", this.type, this.id);\n        mdc.ripple.MDCRipple.attachTo(this.refs[\"b\"]);\n        this.toggle(true);\n    }\n\n    onUmount() {\n        console.log(\"onUmount\", this.type, this.id);\n        this.toggle(false);\n    }\n\n    render(): JsonMLs {\n        return [\n            [\"h2.mdc-typography--title\", this.type],\n            [\"p.mdc-typography--headline\",\n                \"Time: \",\n                [\"strong\", { style: this._interval ? \"\" : \"color: lightgray;\" },\n                    new Date().toLocaleTimeString(),\n                ],\n                \" \",\n                [\"button.mdc-button.mdc-button--raised.mdc-ripple-surface~b\",\n                    { click: (e: Event) => this.toggle() },\n                    this._interval ? \"Stop\" : \"Start\"\n                ]\n            ]\n        ];\n    }\n\n}\n\n\ninterface FormData {\n    name: string;\n    age: number;\n}\n\ninterface FormErrors {\n    name: string;\n    age: string;\n}\n\nclass FormWidget extends Widget {\n\n    private _title: string = \"Form\";\n    private _data: FormData = { name: undefined, age: undefined };\n    private _errors: FormErrors = { name: \"\", age: \"\" };\n\n    readonly sigData = new Signal<FormData>();\n\n    constructor() {\n        super(\"FormWidget\");\n    }\n\n    getTitle(): string {\n        return this._title;\n    }\n\n    setTitle(title: string): this {\n        this._title = title;\n        this.update();\n        return this;\n    }\n\n    getData(): FormData {\n        return this._data;\n    }\n\n    setData(data: FormData): this {\n        this._data = data;\n        this.update();\n        return this;\n    }\n\n    onMount() {\n        console.log(\"onMount\", this.type, this.id);\n        mdc.textField.MDCTextField.attachTo(this.refs[\"f-name\"]);\n        mdc.textField.MDCTextField.attachTo(this.refs[\"f-age\"]);\n    }\n\n    onUmount() {\n        console.log(\"onUmount\", this.type, this.id);\n    }\n\n    render(): JsonMLs {\n        return [\n            [\"h2.mdc-typography--title\",\n                this.type, \" \",\n                [\"span.mdc-typography--caption.mdc-typography--adjust-margin\",\n                    this._title\n                ]\n            ],\n            [\"form\", { action: \"#\", submit: this._onFormSubmit },\n                [\"div\",\n                    [\"label.mdc-text-field~f-name\",\n                        [\"input.mdc-text-field__input~name\",\n                            {\n                                type: \"text\",\n                                required: \"\",\n                                pattern: \".{3,10}\",\n                                size: 10, maxlength: 10,\n                                \"aria-controls\": \"name-helptext\",\n                                autocomplete: \"name\",\n                                input: this._onNameInput\n                            }\n                        ],\n                        [\"span.mdc-text-field__label\",\n                            \"Name\"\n                        ],\n                        [\"div.mdc-text-field__bottom-line\"]\n                    ],\n                    [\"p#name-helptext\",\n                        {\n                            classes: [\n                                \"mdc-text-field-helptext\",\n                                \"mdc-text-field-helptext--persistent-\",\n                                \"mdc-text-field-helptext--validation-msg\"\n                            ],\n                            \"aria-hidden\": \"true\"\n                        },\n                        \"Min 3, max 10 characters\", [\"br\"],\n                        this._errors.name\n                    ],\n                ],\n                [\"div\",\n                    [\"label.mdc-text-field~f-age\",\n                        [\"input.mdc-text-field__input~age\",\n                            {\n                                type: \"number\",\n                                required: \"\",\n                                // pattern: \".{3,10}\",\n                                // size: 20, maxlength: 10,\n                                min: \"1\", max: \"120\",\n                                \"aria-controls\": \"age-helptext\",\n                                autocomplete: \"age\",\n                                input: this._onAgeInput\n                            }\n                        ],\n                        [\"span.mdc-text-field__label\",\n                            \"age\"\n                        ],\n                        [\"div.mdc-text-field__bottom-line\"]\n                    ],\n                    [\"p#age-helptext\",\n                        {\n                            classes: [\n                                \"mdc-text-field-helptext\",\n                                \"mdc-text-field-helptext--persistent-\",\n                                \"mdc-text-field-helptext--validation-msg\"\n                            ],\n                            \"aria-hidden\": \"true\"\n                        },\n                        \"Min 1, max 120 years\", [\"br\"],\n                        this._errors.age\n                    ],\n                ],\n                [\"button.mdc-button.mdc-button--raised.mdc-ripple-surface~submit\",\n                    { type: \"submit\" },\n                    \"Submit\"\n                ]\n            ],\n            [\"pre~data\"]\n        ];\n    }\n\n    private _onFormSubmit = (e: Event) => {\n        e.preventDefault();\n        console.log(\"submit\", this._data);\n        (this.refs[\"submit\"] as HTMLButtonElement).focus();\n        this._validateName((this.refs[\"name\"] as HTMLInputElement).value);\n        this._validateAge((this.refs[\"age\"] as HTMLInputElement).value);\n        if (this._errors.name || this._errors.age) {\n            this.update();\n        } else {\n            this.sigData.emit(this._data);\n            this.refs[\"data\"].innerText = JSON.stringify(this._data, null, 4);\n        }\n    }\n\n    private _onNameInput = (e: Event) => {\n        const i = e.target as HTMLInputElement;\n        // const i = this.refs[\"name\"] as  HTMLInputElement;\n        console.log(\"name\", i.value);\n        this._validateName(i.value);\n        this.update();\n    }\n\n    private _onAgeInput = (e: Event) => {\n        const i = e.target as HTMLInputElement;\n        // const i = this.refs[\"age\"] as  HTMLInputElement;\n        console.log(\"age\", i.value);\n        this._validateAge(i.value);\n        this.update();\n    }\n\n    private _validateName(name: string) {\n        if (name) {\n            this._data.name = name;\n            this._errors.name = \"\";\n        } else {\n            this._data.name = undefined;\n            this._errors.name = \"Name required\";\n        }\n    }\n\n    private _validateAge(age: string) {\n        if (age) {\n            if (isNaN(+age)) {\n                this._data.age = undefined;\n                this._errors.age = \"Invalid age number\";\n            } else {\n                this._data.age = +age;\n                this._errors.age = \"\";\n            }\n        } else {\n            this._data.age = undefined;\n            this._errors.age = \"Age required\";\n        }\n    }\n\n}\n\n\nclass AppWidget extends Widget {\n\n    private _title: string = \"App\";\n\n    readonly helloWidget: HelloWidget;\n    readonly timerWidget: TimerWidget;\n    readonly formWidget: FormWidget;\n\n    constructor() {\n        super(\"AppWidget\");\n        this.helloWidget = new HelloWidget(\"peter\");\n        this.timerWidget = new TimerWidget();\n        this.formWidget = new FormWidget();\n        this.formWidget.sigData.connect(data => console.log(\"sig data\", data));\n    }\n\n    setTitle(title: string): this {\n        this._title = title;\n        this.update();\n        return this;\n    }\n\n    onMount() {\n        console.log(\"onMount\", this.type, this.id);\n    }\n\n    onUmount() {\n        console.log(\"onUmount\", this.type, this.id);\n    }\n\n    render(): JsonMLs {\n        return [\n            [\"h1.mdc-typography--display1\",\n                this._title\n            ],\n            this.helloWidget,\n            [\"hr\"],\n            this.timerWidget,\n            [\"hr\"],\n            this.formWidget\n        ];\n    }\n\n}\n\n\nswInit();\n\nconst app = new AppWidget();\n\napp.setTitle(\"MyApp\");\napp.helloWidget.setName(\"Peter\");\napp.formWidget.setTitle(\"MyForm\");\n\napp.mount(document.getElementById(\"app\"));\n\n// app.mount(document.getElementById(app.id)); // SSR - server side rendering\n\nsetTimeout(() => {\n    showNotification(\"Notif title\", {\n        body: \"Notif body\",\n        icon: \"assets/icons/ic-face.png\",\n        tag: \"notif-tag\"\n        // vibrate: [200, 100, 200, 100, 200, 100, 200],\n        // data: {\n        //     dateOfArrival: Date.now(),\n        //     primaryKey: 1\n        // },\n        // actions: [\n        //     {action: 'explore', title: 'Explore this new world',\n        //         icon: 'images/checkmark.png'},\n        //     {action: 'close', title: 'Close notification',\n        //         icon: 'images/xmark.png'},\n        // ]\n    });\n}, 300000);\n\n(self as any).app = app;\n\n(self as any).VERSION = \"@VERSION@\";\n"],"names":["jsonML","handler","ctx","head","attrsObj","hasAttrs","constructor","Object","childIdx","children","i","length","Function","attrs","refSplit","split","ref","dotSplit","hashSplit","tag","id","classes","slice","_id","_classes","_ref","open","l","jml","undefined","Array","jsonml","fnc","String","text","obj","close","JsonmlIDomHandler","jsonMLs","jsonMLs_1","_i","IncrementalDOM","jsonml2idom","toJsonML","node","patch","data","jsonmls2idom","title","options","self","Notification","console","log","requestPermission","result","navigator","serviceWorker","ready","then","registration","showNotification","warn","props","a","hasOwnProperty","concat","d","push","JSON","stringify","unshift","join","elementOpen","_key","_skip","skip","refs","currentElement","elementClose","this","type","Widget","__count","e","document","body","dom","jsonmls2idomPatch","render","setAttribute","onMount","onUmount","hasAttribute","removeAttribute","parentElement","removeChild","_updateSched","setTimeout","_this","widget","clearTimeout","Signal","onConnect","_onConnect","onDisconnect","_onDisconnect","_slots","callback","object","filter","slot","_emit","map","call","name","_super","target","_name","value","update","__extends","HelloWidget","mdc","textField","MDCTextField","attachTo","input","_onTextInput","TimerWidget","on","_interval","setInterval","clearInterval","toggle","ripple","MDCRipple","style","Date","toLocaleTimeString","click","age","preventDefault","_data","focus","_validateName","_validateAge","_errors","sigData","emit","innerText","FormWidget","_title","action","submit","_onFormSubmit","required","pattern","size","maxlength","aria-controls","autocomplete","_onNameInput","aria-hidden","min","max","_onAgeInput","isNaN","helloWidget","timerWidget","formWidget","connect","AppWidget","register","installing","waiting","active","scope","catch","error","app","setTitle","setName","mount","getElementById","icon","VERSION"],"mappings":"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"}